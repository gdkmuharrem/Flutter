**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************

------
List :
------
	+Aynı türden verileri bir arada tutar.
	+İndex numaraları sıfırdan başlar.
	+Veri eklendikçe otomatik olarak boyutu artar.

**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************V

-----------------------------
Liste Tanımlama Yöntemleri :
-----------------------------
    1-) var iller = <String>[];

    2-) var plakalar = [16,34,5];


	Örnek Tanımlama:
        ----------------------------------
        var meyveler = <String>[];
        meyveler.add = ("Çilek");
        meyveler.add = ("Muz");
        meyveler.add = ("Elma");
        meyveler.add = ("Kivi");
        meyveler.add = ("Kiraz");

        İndis		Değer
          0		Çilek
          1		Muz
          2		Elma
          3		Kivi
          4		Kiraz		Listemiz bu şekilde olur.
        -----------------------------------

**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************

----------------------------------
List'de kullanılan bazı metodlar :
----------------------------------

    add()  -->  Bu metod ile listenin "SONUNA" ekleme yapabiliriz.

    insert()  -->  Bu metor ile listede ekleme yapmak istediğimiz index numarasını yolluyoruz
ve eklemek istediğimiz veri istediğimiz index numarasına atanıyor ve o indexte olan veriden itibaren
sonuna kadar tüm verilerin indexleri bir sonrakine atanıyor. Yani "ARAYA" veri ekleme yapabiliyoruz.

    isEmpty  -->  Listemizin dolu olup olmadığını sorgulayan metottur. Eğer dolu ise "false",
boş ise "true" değeri döndürür.

    length  -->  Listemizin içeriğindeki elemanların toplam sayısını verir. int değer döndürür.

    first  -->  Listemizin İLK elemanını bize geri döndürür.

    last  -->  Listemizin SON elemanını bize geri döndürür.

    contains("ARANAN_ELEMAN")  --> Listemizin içerisinde var olup olmadığını merak ettiğimiz
elemanı listede arar ve eğer aradığımız eleman listede;
    varsa "true",
    yoksa "false" değer döndürür.

    reversed  -->  Listemizin içeriğindeki elemanların tamamını ters çevirir. Yani mesela
[0,1,2,3,4] elemanlarına sahip bir listemiz varsa bunu reversed ile [4,3,2,1,0] haline çeviririz.

    sort()  -->  Listemizin içeriğindeki verileri String veriler ise alfabeye göre sayısal
veriler ise sayısal sıraya göre sıralamaya yarar. Bu metod hakkında önemli bilgi:
        PRİNT İÇERİSİNDE SORT METODUNU KULLANAMAYIZ !!!

    removeAt(indexNumarası)  -->  Listemizin içerisinden istediğimiz indexe sahip elemanımızı
silmemizi sağlar. Bu metod hakkında önemli bilgi :
        PRİNT İÇERİSİNDE REMOVEAT METODUNU KULLANAMAYIZ !!!

    remove(elemanAdi)  -->  Listemizden istediğimiz elemanı silmemizi sağlar. Bu elemanın
index değerini bilmemize gerek yoktur. Sadece listemizin içeriğinde mevcut olduğunu bilmemiz
yeterlidir.Bu metod hakkında önemli bilgi:
        PRİNT İÇERİSİNDE REMOVE METODUNU KULLANAMAYIZ !!!
        SİLİNMEK İSTENEN ELEMANIN AYNISINDAN BİRDEN FAZLA VARSA HEPSİNİ SİLER !!!

    clear()  -->  Listemizin içeriğini tamamen temizlememize, silmemize yarayan metotdur.
Bu metod hakkında önemli bilgi:
        PRİNT İÇERİSİNDE CLEAR METODUNU KULLANAMAYIZ !!!

**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************

----------------------------------------
List Iterating - DÖNGÜLER İLE LİSTELER :
----------------------------------------

    for (var m in listeIsmi){print (m);}  Döngüsü :

        Bu döngümüzde listemizin içerisindeki elemanları tek tek m ismini verdiğimiz değişkene
    aktarıyoruz ve eğer listemizi ekrana basmak istersek tek print ile içerisine m değişkenini
    atmamız yeterli. Çünkü for döngüsü listeyi tamamen gezene kadar çalışmaya devam edecek.
    Her çalışma tekararında m değişkenine aktarılan elemanı ekrana basarsak listeyi ekrana
    basmış oluyoruz.


    for (var i=0;i<listeIsmi.length();i++){print("$i. indisli eleman : ${listeIsmi[i]}")} Döngüsü :

        Bu döngümüzde ise i isimli ilk değeri 0 olan bir değişken oluşturuyoruz. i değişkenimiz
    listemizin eleman sayısından küçük olduğunu sürece for döngüsünün çalışmasını ve
    her çalıştığında i değerimizi 1 arttırmasını istediğimizi söylüyoruz.
    Bunu yapmamızın sebebi :
        Listemizin kaç elemanlı liste olduğunu bilemeyiz, bilsek bile bunu her liste için hesaplamak
    bizden çok zaman çalacaktır. Elbette tek sebebi bu değil, aynı zamanda listemizin her elemanının
    hangi indise sahip olduğunu da öğrenebilmek için sayac tarzı bir değişkene ihtiyacımız var.
    Bu sebeplerden dolayı i değişkenini oluşturduk.
    Daha sonra i değişkenimizi her değerini 0'dan başlayıp listemizin son elemanına gelen kadar
    ekrana basıyoruz. 0,1,2,3,4.... bu ekrana basma işlemi sırasında, index sayacımızı oluşturduğumuza
    göre sıra elemanları ekrana basmaya geliyor. Bu işlemi de "listeIsmi[i]" ile yapıyoruz.
    Amacımız 0. indisten son indise kadaar hepsini gezmek.

**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************

----------------------------------------
List ile Nesne Calısması :
----------------------------------------

    ilk olarak Ogrenciler sınıfımızı tanımladık ve içerisinde değişkenlerimizi tanımladık.

    Daha sonra constructorumuzu tanımladık ve bunun sayesinde artık herhangi bir yerden sınıfımız
kullanılmak istenirse direkt olarak değişkenlerimizin değerlerini yollamak zorunda kalacak.

    Sonra main dosyamızı açtık ve ana çalışacak kodlarımızı yazmaya başladık.
        main dosyamızda normal nesne yapısında yaptığımız gibi classımıza ait o1,o2,o3 isimli 3 nesne
tanımladık. Bu nesnelerimize tanım aşamasında constructorumuz zorunlu tuttuğu için değişken değerlerini
yolladık.
    var o1 = Ogrenciler(100, "Muharrem", "UNİ-2");
    var o2 = Ogrenciler(101, "Ahmet", "LİSE-MEZUN");
    var o3 = Ogrenciler(102, "Zeynep", "7-F");


    Daha sonra liste ve nesne yapısını birleştirmek adına ogrenciler isimli bir liste oluşturduk ve
içerisinde tutacağı veri türüne classımızı yazdık. Bu sayede classımızın nesnelerinin tanımları
int,String tarzı değilde classımız ile tanımlı olduğu için listemizin elemanlarına classımızın
nesnelerini ekleyebildik. Bu sayede list yapısıyla nesne programlamayı birleştirmiş olduk.
    var ogrenciler = <Ogrenciler>[o1,o2,o3];


    En son olarak tüm listeyi dolaşıp listemizdeki elemanların değişken değerlerini ekrana basmak
için bir for in döngüsü kurduk.
    for (var o in ogrenciler){
        print("**********");
        print("Öğrenci no : ${o.no}");
        print("Öğrenci ad : ${o.ad}");
        print("Öğrenci sınıf : ${o.sinif}");
      }

**********************************************************************************************
----------------------------------------------------------------------------------------------
**********************************************************************************************



